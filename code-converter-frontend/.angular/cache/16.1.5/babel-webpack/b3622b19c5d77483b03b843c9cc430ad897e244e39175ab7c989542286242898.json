{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass OpenAiService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080/ask-openai';\n  }\n  convert(prompt) {\n    return this.http.post(this.url, prompt, {\n      observe: 'response'\n    });\n  }\n}\nOpenAiService.ɵfac = function OpenAiService_Factory(t) {\n  return new (t || OpenAiService)(i0.ɵɵinject(i1.HttpClient));\n};\nOpenAiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OpenAiService,\n  factory: OpenAiService.ɵfac,\n  providedIn: 'root'\n});\nexport { OpenAiService };","map":{"version":3,"names":["OpenAiService","constructor","http","url","convert","prompt","post","observe","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/will/code-converter/code-converter-frontend/src/app/service/openai.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IConvert } from '../models/convert.model';\n\nexport type EntityResponseType = HttpResponse<IConvert>;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenAiService {\n\n  private url = 'http://localhost:8080/ask-openai';\n\n  constructor(private http: HttpClient) {  }\n\n  convert(prompt: string): Observable<HttpResponse<any>> {\n    return this.http.post<string>(this.url, prompt, {observe: 'response'});\n  }\n\n}\n"],"mappings":";;AAOA,MAGaA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAG,kCAAkC;EAEP;EAEzCC,OAAOA,CAACC,MAAc;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,IAAI,CAACH,GAAG,EAAEE,MAAM,EAAE;MAACE,OAAO,EAAE;IAAU,CAAC,CAAC;EACxE;;AARWP,aAAa,C;mBAAbA,aAAa,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbX,aAAa,C;SAAbA,aAAa;EAAAY,OAAA,EAAbZ,aAAa,CAAAa,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPd,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}