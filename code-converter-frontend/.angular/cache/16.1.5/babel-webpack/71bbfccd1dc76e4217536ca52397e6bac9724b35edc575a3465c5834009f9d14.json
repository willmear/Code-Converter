{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(openAiService) {\n    this.openAiService = openAiService;\n    this.languages = ['Java', 'Python', 'C', 'C++', 'C#', 'Golang', 'JavaScript', 'R', 'Julia', 'Perl', 'Matlab', 'Kotlin', 'PHP', 'Ruby', 'Rust', 'TypeScript', 'Lua', 'SAS', 'Fortran', 'Lisp', 'Scala', 'Assembly', 'ActionScript', 'Clojure', 'Dart', 'Elixir', 'Erlang', 'Haskell', 'HTML', 'OCaml', 'Pascal', 'PowerShell', 'Swift', 'Visual Basic', 'Objective-C', 'F#', 'Groovy', 'Haxe', 'Racket', 'Scheme', 'SQL', 'Tcl', 'VimL', 'Apex', 'Arduino', 'Crystal', 'D', 'Elm', 'Forth', 'Julia', 'Nim', 'Puppet', 'PureScript', 'Raku', 'Rebol', 'Red', 'Verilog', 'VHDL', 'Zig', 'ABAP', 'Ada', 'Agda', 'ATS', 'AutoHotkey'];\n    this.languageFrom = this.languages[0];\n    this.languageTo = this.languages[0];\n    this.code = '';\n    this.outputCode = '';\n    this.isLoading = false;\n    this.theme = 'vs-dark';\n    this.codeModel = {\n      language: this.languageFrom,\n      uri: 'main.json',\n      value: '{}'\n    };\n    this.options = {\n      contextmenu: true,\n      minimap: {\n        enabled: false\n      }\n    };\n  }\n  ngOnInit() {}\n  onConvert(convert) {\n    if (this.languageFrom === this.languageTo) {\n      this.outputCode = 'Please select different languages';\n      return;\n    }\n    this.isLoading = true;\n    convert.prompt = `Convert the following ${this.languageFrom} code to ${this.languageTo}:\\n\\n${convert.code}`;\n    this.openAiService.convert(convert.prompt).subscribe({\n      next: data => {\n        this.isLoading = false;\n        this.outputCode = data.body.choices[0].text;\n        if (this.outputCode.substring(0, 2) == '\\n\\n') {\n          this.outputCode = this.outputCode.substring(2);\n        }\n      },\n      error: error => {\n        this.outputCode = error.message;\n      }\n    });\n  }\n  onCodeChanged(value) {\n    this.code = value;\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","HomeComponent","constructor","openAiService","languages","languageFrom","languageTo","code","outputCode","isLoading","theme","codeModel","language","uri","value","options","contextmenu","minimap","enabled","ngOnInit","onConvert","convert","prompt","subscribe","next","data","body","choices","text","substring","error","message","onCodeChanged","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/will/code-converter/code-converter-frontend/src/app/home/home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CodeModel } from '@ngstack/code-editor';\nimport { IConvert } from '../models/convert.model';\nimport { OpenAiService } from '../service/openai.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  languages = ['Java', 'Python', 'C', 'C++', 'C#', 'Golang', 'JavaScript',\n               'R', 'Julia', 'Perl', 'Matlab', 'Kotlin', 'PHP', 'Ruby', 'Rust',\n               'TypeScript', 'Lua', 'SAS', 'Fortran', 'Lisp', 'Scala', 'Assembly',\n               'ActionScript', 'Clojure', 'Dart', 'Elixir', 'Erlang', 'Haskell',\n               'HTML', 'OCaml', 'Pascal', 'PowerShell', 'Swift', 'Visual Basic',\n               'Objective-C', 'F#', 'Groovy', 'Haxe', 'Racket', 'Scheme', 'SQL',\n               'Tcl', 'VimL', 'Apex', 'Arduino', 'Crystal', 'D', 'Elm', 'Forth',\n               'Julia', 'Nim', 'Puppet', 'PureScript', 'Raku', 'Rebol', 'Red',\n               'Verilog', 'VHDL', 'Zig', 'ABAP', 'Ada', 'Agda', 'ATS', 'AutoHotkey'\n              ];\n  languageFrom: string = this.languages[0];\n  languageTo: string = this.languages[0];\n  code: string = '';\n  outputCode: string = '';\n  isLoading: boolean = false;\n  theme = 'vs-dark';\n  codeModel: CodeModel = {\n    language: this.languageFrom,\n    uri: 'main.json',\n    value: '{}'\n  };\n  options = {\n    contextmenu: true,\n    minimap: {\n      enabled: false\n    }\n  };\n\n  constructor(private openAiService: OpenAiService) {  }\n\n  ngOnInit(): void {}\n\n  onConvert(convert: IConvert) {\n\n    if (this.languageFrom === this.languageTo) {\n      this.outputCode = 'Please select different languages';\n      return;\n    }\n\n    this.isLoading = true;\n\n    convert.prompt = `Convert the following ${this.languageFrom} code to ${this.languageTo}:\\n\\n${convert.code}`;\n\n    this.openAiService.convert(convert.prompt).subscribe({\n      next: data => {\n        this.isLoading = false;\n\n        this.outputCode = data.body.choices[0].text;\n\n        if (this.outputCode.substring(0, 2) == '\\n\\n') {\n          this.outputCode = this.outputCode.substring(2);\n        }\n\n      },\n      error: error => {\n        this.outputCode = error.message;\n      }\n    });\n    \n  }\n\n  onCodeChanged(value: any) {\n    this.code = value;\n  }\n  \n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}