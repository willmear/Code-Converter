{"ast":null,"code":"import _asyncToGenerator from \"/home/will/code-converter/code-converter-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Input, Output, HostListener, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"editor\"];\nconst EDITOR_SETTINGS = new InjectionToken('EDITOR_SETTINGS');\nclass CodeEditorService {\n  constructor(settings) {\n    // baseUrl = 'assets/monaco';\n    this.baseUrl = 'https://unpkg.com/monaco-editor/min';\n    // typingsWorkerUrl = 'assets/workers/typings-worker.js';\n    this.typingsWorkerUrl = 'https://unpkg.com/@ngstack/code-editor/workers/typings-worker.js';\n    this.typingsLoaded = new Subject();\n    this.loaded = new Subject();\n    this.loadingTypings = new BehaviorSubject(false);\n    const defaults = {\n      baseUrl: this.baseUrl,\n      typingsWorkerUrl: this.typingsWorkerUrl,\n      ...settings\n    };\n    this.baseUrl = defaults.baseUrl;\n    this.typingsWorkerUrl = defaults.typingsWorkerUrl;\n  }\n  loadTypingsWorker() {\n    if (!this.typingsWorker && window.Worker) {\n      if (this.typingsWorkerUrl.startsWith('http')) {\n        const proxyScript = `importScripts('${this.typingsWorkerUrl}');`;\n        const proxy = URL.createObjectURL(new Blob([proxyScript], {\n          type: 'text/javascript'\n        }));\n        this.typingsWorker = new Worker(proxy);\n      } else {\n        this.typingsWorker = new Worker(this.typingsWorkerUrl);\n      }\n      this.typingsWorker.addEventListener('message', e => {\n        this.loadingTypings.next(false);\n        this.typingsLoaded.next(e.data);\n      });\n    }\n    return this.typingsWorker;\n  }\n  loadTypings(dependencies) {\n    if (dependencies && dependencies.length > 0) {\n      const worker = this.loadTypingsWorker();\n      if (worker) {\n        this.loadingTypings.next(true);\n        worker.postMessage({\n          dependencies\n        });\n      }\n    }\n  }\n  loadEditor() {\n    return new Promise(resolve => {\n      const onGotAmdLoader = () => {\n        window.require.config({\n          paths: {\n            vs: `${this.baseUrl}/vs`\n          }\n        });\n        if (this.baseUrl.startsWith('http')) {\n          const proxyScript = `\n            self.MonacoEnvironment = {\n              baseUrl: \"${this.baseUrl}\"\n            };\n            importScripts('${this.baseUrl}/vs/base/worker/workerMain.js');\n          `;\n          const proxy = URL.createObjectURL(new Blob([proxyScript], {\n            type: 'text/javascript'\n          }));\n          window['MonacoEnvironment'] = {\n            getWorkerUrl: function () {\n              return proxy;\n            }\n          };\n        }\n        window.require(['vs/editor/editor.main'], () => {\n          this.loaded.next({\n            monaco\n          });\n          resolve();\n        });\n      };\n      if (!window.require) {\n        const loaderScript = document.createElement('script');\n        loaderScript.type = 'text/javascript';\n        loaderScript.src = `${this.baseUrl}/vs/loader.js`;\n        loaderScript.addEventListener('load', onGotAmdLoader);\n        document.body.appendChild(loaderScript);\n      } else {\n        onGotAmdLoader();\n      }\n    });\n  }\n}\nCodeEditorService.ɵfac = function CodeEditorService_Factory(t) {\n  return new (t || CodeEditorService)(i0.ɵɵinject(EDITOR_SETTINGS, 8));\n};\nCodeEditorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CodeEditorService,\n  factory: CodeEditorService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CodeEditorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [EDITOR_SETTINGS]\n      }]\n    }];\n  }, null);\n})();\nclass TypescriptDefaultsService {\n  constructor(codeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n    codeEditorService.typingsLoaded.subscribe(typings => {\n      this.updateTypings(typings);\n    });\n  }\n  setup(monaco) {\n    if (!monaco) {\n      return;\n    }\n    this.monaco = monaco;\n    const defaults = monaco.languages.typescript.typescriptDefaults;\n    defaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES6,\n      module: 'commonjs',\n      noEmit: true,\n      noLib: true,\n      emitDecoratorMetadata: true,\n      experimentalDecorators: true,\n      allowNonTsExtensions: true,\n      declaration: true,\n      lib: ['es2017', 'dom'],\n      baseUrl: '.',\n      paths: {}\n    });\n    defaults.setMaximumWorkerIdleTime(-1);\n    defaults.setEagerModelSync(true);\n    /*\n    defaults.setDiagnosticsOptions({\n      noSemanticValidation: true,\n      noSyntaxValidation: true\n    });\n    */\n  }\n\n  updateTypings(typings) {\n    if (typings) {\n      this.addExtraLibs(typings.files);\n      this.addLibraryPaths(typings.entryPoints);\n    }\n  }\n  addExtraLibs(libs = []) {\n    if (!this.monaco || !libs || libs.length === 0) {\n      return;\n    }\n    const defaults = this.monaco.languages.typescript.typescriptDefaults;\n    // undocumented API\n    const registeredLibs = defaults.getExtraLibs();\n    libs.forEach(lib => {\n      if (!registeredLibs[lib.path]) {\n        // needs performance improvements, recreates its worker each time\n        // defaults.addExtraLib(lib.content, lib.path);\n        // undocumented API\n        defaults._extraLibs[lib.path] = lib.content;\n      }\n    });\n    // undocumented API\n    defaults._onDidChange.fire(defaults);\n  }\n  addLibraryPaths(paths = {}) {\n    if (!this.monaco) {\n      return;\n    }\n    const defaults = this.monaco.languages.typescript.typescriptDefaults;\n    const compilerOptions = defaults.getCompilerOptions();\n    compilerOptions.paths = compilerOptions.paths || {};\n    Object.keys(paths).forEach(key => {\n      compilerOptions.paths[key] = [paths[key]];\n    });\n  }\n}\nTypescriptDefaultsService.ɵfac = function TypescriptDefaultsService_Factory(t) {\n  return new (t || TypescriptDefaultsService)(i0.ɵɵinject(CodeEditorService));\n};\nTypescriptDefaultsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TypescriptDefaultsService,\n  factory: TypescriptDefaultsService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TypescriptDefaultsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: CodeEditorService\n    }];\n  }, null);\n})();\nclass JavascriptDefaultsService {\n  constructor(codeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n    codeEditorService.typingsLoaded.subscribe(typings => {\n      this.updateTypings(typings);\n    });\n  }\n  setup(monaco) {\n    if (!monaco) {\n      return;\n    }\n    this.monaco = monaco;\n    const defaults = monaco.languages.typescript.javascriptDefaults;\n    defaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES6,\n      module: 'commonjs',\n      allowNonTsExtensions: true,\n      baseUrl: '.',\n      paths: {}\n    });\n    defaults.setMaximumWorkerIdleTime(-1);\n    defaults.setEagerModelSync(true);\n    /*\n    defaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n    */\n  }\n\n  updateTypings(typings) {\n    if (typings) {\n      this.addExtraLibs(typings.files);\n      this.addLibraryPaths(typings.entryPoints);\n    }\n  }\n  addExtraLibs(libs = []) {\n    if (!this.monaco || !libs || libs.length === 0) {\n      return;\n    }\n    const defaults = this.monaco.languages.typescript.javascriptDefaults;\n    // undocumented API\n    const registeredLibs = defaults.getExtraLibs();\n    libs.forEach(lib => {\n      if (!registeredLibs[lib.path]) {\n        // needs performance improvements, recreates its worker each time\n        // defaults.addExtraLib(lib.content, lib.path);\n        // undocumented API\n        defaults._extraLibs[lib.path] = lib.content;\n      }\n    });\n    // undocumented API\n    defaults._onDidChange.fire(defaults);\n  }\n  addLibraryPaths(paths = {}) {\n    if (!this.monaco) {\n      return;\n    }\n    const defaults = this.monaco.languages.typescript.javascriptDefaults;\n    const compilerOptions = defaults.getCompilerOptions();\n    compilerOptions.paths = compilerOptions.paths || {};\n    Object.keys(paths).forEach(key => {\n      compilerOptions.paths[key] = [paths[key]];\n    });\n  }\n}\nJavascriptDefaultsService.ɵfac = function JavascriptDefaultsService_Factory(t) {\n  return new (t || JavascriptDefaultsService)(i0.ɵɵinject(CodeEditorService));\n};\nJavascriptDefaultsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: JavascriptDefaultsService,\n  factory: JavascriptDefaultsService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JavascriptDefaultsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: CodeEditorService\n    }];\n  }, null);\n})();\nclass JsonDefaultsService {\n  constructor(codeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n  }\n  setup(monaco) {\n    if (!monaco) {\n      return;\n    }\n    this.monaco = monaco;\n    const defaults = monaco.languages.json.jsonDefaults;\n    defaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: true,\n      schemas: [...defaults._diagnosticsOptions.schemas, {\n        uri: 'http://myserver/foo-schema.json',\n        // fileMatch: [id],\n        // fileMatch: ['*.json'],\n        schema: {\n          type: 'object',\n          properties: {\n            p1: {\n              enum: ['v1', 'v2']\n            },\n            p2: {\n              $ref: 'http://myserver/bar-schema.json'\n            }\n          }\n        }\n      }, {\n        uri: 'http://myserver/bar-schema.json',\n        // fileMatch: [id],\n        // fileMatch: ['*.json'],\n        schema: {\n          type: 'object',\n          properties: {\n            q1: {\n              enum: ['x1', 'x2']\n            }\n          }\n        }\n      }]\n    });\n  }\n  addSchemas(id, definitions = []) {\n    const defaults = this.monaco.languages.json.jsonDefaults;\n    const options = defaults.diagnosticsOptions;\n    const schemas = {};\n    if (options && options.schemas && options.schemas.length > 0) {\n      options.schemas.forEach(schema => {\n        schemas[schema.uri] = schema;\n      });\n    }\n    for (const {\n      uri,\n      schema\n    } of definitions) {\n      schemas[uri] = {\n        uri,\n        schema,\n        fileMatch: [id || '*.json']\n      };\n    }\n    // console.log(schemas);\n    // console.log(Object.values(schemas));\n    options.schemas = Object.values(schemas);\n    defaults.setDiagnosticsOptions(options);\n  }\n}\nJsonDefaultsService.ɵfac = function JsonDefaultsService_Factory(t) {\n  return new (t || JsonDefaultsService)(i0.ɵɵinject(CodeEditorService));\n};\nJsonDefaultsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: JsonDefaultsService,\n  factory: JsonDefaultsService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JsonDefaultsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: CodeEditorService\n    }];\n  }, null);\n})();\nclass CodeEditorComponent {\n  constructor(editorService, typescriptDefaults, javascriptDefaults, jsonDefaults) {\n    this.editorService = editorService;\n    this.typescriptDefaults = typescriptDefaults;\n    this.javascriptDefaults = javascriptDefaults;\n    this.jsonDefaults = jsonDefaults;\n    // private _value = '';\n    this.defaultOptions = {\n      lineNumbers: true,\n      contextmenu: false,\n      minimap: {\n        enabled: false\n      }\n    };\n    // @Input()\n    // set value(v: string) {\n    //   if (v !== this._value) {\n    //     this._value = v;\n    //     this.setEditorValue(v);\n    //     this.valueChanged.emit(v);\n    //   }\n    // }\n    // get value(): string {\n    //   return this._value;\n    // }\n    /**\n     * Editor theme. Defaults to `vs`.\n     *\n     * Allowed values: `vs`, `vs-dark` or `hc-black`.\n     * @memberof CodeEditorComponent\n     */\n    this.theme = 'vs';\n    /**\n     * Editor options.\n     *\n     * See https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html for more details.\n     *\n     * @memberof CodeEditorComponent\n     */\n    this.options = {};\n    /**\n     * Toggle readonly state of the editor.\n     *\n     * @memberof CodeEditorComponent\n     */\n    this.readOnly = false;\n    this.valueChanged = new EventEmitter();\n    this.loaded = new EventEmitter();\n  }\n  ngOnDestroy() {\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n    if (this._model) {\n      this._model.dispose();\n      this._model = null;\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes.codeModel && !changes.codeModel.firstChange) {\n      this.updateModel(changes.codeModel.currentValue);\n    }\n    if (changes.readOnly && !changes.readOnly.firstChange) {\n      if (this._editor) {\n        this._editor.updateOptions({\n          readOnly: changes.readOnly.currentValue\n        });\n      }\n    }\n    if (changes.theme && !changes.theme.firstChange) {\n      monaco.editor.setTheme(changes.theme.currentValue);\n    }\n  }\n  onResize() {\n    if (this._editor) {\n      this._editor.layout();\n    }\n  }\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.setupEditor();\n      _this.loaded.emit();\n    })();\n  }\n  setupEditor() {\n    const domElement = this.editorContent.nativeElement;\n    const settings = {\n      value: '',\n      language: 'text',\n      uri: `code-${Date.now()}`,\n      ...this.codeModel\n    };\n    this._model = monaco.editor.createModel(settings.value, settings.language, monaco.Uri.file(settings.uri));\n    const options = Object.assign({}, this.defaultOptions, this.options, {\n      readOnly: this.readOnly,\n      theme: this.theme,\n      model: this._model\n    });\n    this._editor = monaco.editor.create(domElement, options);\n    this._model.onDidChangeContent(( /*e*/\n    ) => {\n      const newValue = this._model.getValue();\n      if (this.codeModel) {\n        this.codeModel.value = newValue;\n      }\n      this.valueChanged.emit(newValue);\n    });\n    this.setupDependencies(this.codeModel);\n  }\n  setupDependencies(model) {\n    if (!model) {\n      return;\n    }\n    const {\n      language\n    } = model;\n    if (language) {\n      const lang = language.toLowerCase();\n      switch (lang) {\n        case 'typescript':\n          if (model.dependencies) {\n            this.editorService.loadTypings(model.dependencies);\n          }\n          break;\n        case 'javascript':\n          if (model.dependencies) {\n            this.editorService.loadTypings(model.dependencies);\n          }\n          break;\n        case 'json':\n          if (model.schemas) {\n            this.jsonDefaults.addSchemas(model.uri, model.schemas);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  setEditorValue(value) {\n    // Fix for value change while dispose in process.\n    setTimeout(() => {\n      if (this._model) {\n        this._model.setValue(value);\n      }\n    });\n  }\n  updateModel(model) {\n    if (model) {\n      this.setEditorValue(model.value);\n      if (this._model && typeof monaco !== undefined) {\n        monaco.editor.setModelLanguage(this._model, model.language);\n      }\n      this.setupDependencies(model);\n    }\n  }\n}\nCodeEditorComponent.ɵfac = function CodeEditorComponent_Factory(t) {\n  return new (t || CodeEditorComponent)(i0.ɵɵdirectiveInject(CodeEditorService), i0.ɵɵdirectiveInject(TypescriptDefaultsService), i0.ɵɵdirectiveInject(JavascriptDefaultsService), i0.ɵɵdirectiveInject(JsonDefaultsService));\n};\nCodeEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CodeEditorComponent,\n  selectors: [[\"ngs-code-editor\"]],\n  viewQuery: function CodeEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ngs-code-editor\"],\n  hostBindings: function CodeEditorComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function CodeEditorComponent_resize_HostBindingHandler() {\n        return ctx.onResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    codeModel: \"codeModel\",\n    theme: \"theme\",\n    options: \"options\",\n    readOnly: \"readOnly\"\n  },\n  outputs: {\n    valueChanged: \"valueChanged\",\n    loaded: \"loaded\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"id\", \"editor\", 1, \"monaco-editor\", \"editor\"], [\"editor\", \"\"]],\n  template: function CodeEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  styles: [\".editor{width:100%;height:inherit;min-height:200px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CodeEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngs-code-editor',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'ngs-code-editor'\n      },\n      template: \"<div id=\\\"editor\\\" #editor class=\\\"monaco-editor editor\\\"></div>\\n\",\n      styles: [\".editor{width:100%;height:inherit;min-height:200px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: CodeEditorService\n    }, {\n      type: TypescriptDefaultsService\n    }, {\n      type: JavascriptDefaultsService\n    }, {\n      type: JsonDefaultsService\n    }];\n  }, {\n    editorContent: [{\n      type: ViewChild,\n      args: ['editor', {\n        static: true\n      }]\n    }],\n    codeModel: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    valueChanged: [{\n      type: Output\n    }],\n    loaded: [{\n      type: Output\n    }],\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\nfunction setupEditorService(service) {\n  const result = () => service.loadEditor();\n  return result;\n}\nclass CodeEditorModule {\n  static forRoot(settings) {\n    return {\n      ngModule: CodeEditorModule,\n      providers: [{\n        provide: EDITOR_SETTINGS,\n        useValue: settings\n      }, CodeEditorService, TypescriptDefaultsService, JavascriptDefaultsService, JsonDefaultsService, {\n        provide: APP_INITIALIZER,\n        useFactory: setupEditorService,\n        deps: [CodeEditorService],\n        multi: true\n      }]\n    };\n  }\n  static forChild() {\n    return {\n      ngModule: CodeEditorModule\n    };\n  }\n}\nCodeEditorModule.ɵfac = function CodeEditorModule_Factory(t) {\n  return new (t || CodeEditorModule)();\n};\nCodeEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CodeEditorModule\n});\nCodeEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CodeEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CodeEditorComponent],\n      exports: [CodeEditorComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of code-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CodeEditorComponent, CodeEditorModule, CodeEditorService, EDITOR_SETTINGS, JavascriptDefaultsService, TypescriptDefaultsService, setupEditorService };","map":{"version":3,"names":["i0","InjectionToken","Injectable","Optional","Inject","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","Input","Output","HostListener","APP_INITIALIZER","NgModule","Subject","BehaviorSubject","CommonModule","_c0","EDITOR_SETTINGS","CodeEditorService","constructor","settings","baseUrl","typingsWorkerUrl","typingsLoaded","loaded","loadingTypings","defaults","loadTypingsWorker","typingsWorker","window","Worker","startsWith","proxyScript","proxy","URL","createObjectURL","Blob","type","addEventListener","e","next","data","loadTypings","dependencies","length","worker","postMessage","loadEditor","Promise","resolve","onGotAmdLoader","require","config","paths","vs","getWorkerUrl","monaco","loaderScript","document","createElement","src","body","appendChild","ɵfac","CodeEditorService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","undefined","decorators","TypescriptDefaultsService","codeEditorService","subscribe","event","setup","typings","updateTypings","languages","typescript","typescriptDefaults","setCompilerOptions","target","ScriptTarget","ES6","module","noEmit","noLib","emitDecoratorMetadata","experimentalDecorators","allowNonTsExtensions","declaration","lib","setMaximumWorkerIdleTime","setEagerModelSync","addExtraLibs","files","addLibraryPaths","entryPoints","libs","registeredLibs","getExtraLibs","forEach","path","_extraLibs","content","_onDidChange","fire","compilerOptions","getCompilerOptions","Object","keys","key","TypescriptDefaultsService_Factory","JavascriptDefaultsService","javascriptDefaults","JavascriptDefaultsService_Factory","JsonDefaultsService","json","jsonDefaults","setDiagnosticsOptions","validate","allowComments","schemas","_diagnosticsOptions","uri","schema","properties","p1","enum","p2","$ref","q1","addSchemas","id","definitions","options","diagnosticsOptions","fileMatch","values","JsonDefaultsService_Factory","CodeEditorComponent","editorService","defaultOptions","lineNumbers","contextmenu","minimap","enabled","theme","readOnly","valueChanged","ngOnDestroy","_editor","dispose","_model","ngOnChanges","changes","codeModel","firstChange","updateModel","currentValue","updateOptions","editor","setTheme","onResize","layout","ngAfterViewInit","_this","_asyncToGenerator","setupEditor","emit","domElement","editorContent","nativeElement","value","language","Date","now","createModel","Uri","file","assign","model","create","onDidChangeContent","newValue","getValue","setupDependencies","lang","toLowerCase","setEditorValue","setTimeout","setValue","setModelLanguage","CodeEditorComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","CodeEditorComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostBindings","CodeEditorComponent_HostBindings","ɵɵlistener","CodeEditorComponent_resize_HostBindingHandler","ɵɵresolveWindow","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","CodeEditorComponent_Template","ɵɵelement","styles","encapsulation","changeDetection","selector","OnPush","None","host","class","static","setupEditorService","service","result","CodeEditorModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","multi","forChild","CodeEditorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/home/will/code-converter/code-converter-frontend/node_modules/@ngstack/code-editor/fesm2020/ngstack-code-editor.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Input, Output, HostListener, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\nconst EDITOR_SETTINGS = new InjectionToken('EDITOR_SETTINGS');\nclass CodeEditorService {\n    constructor(settings) {\n        // baseUrl = 'assets/monaco';\n        this.baseUrl = 'https://unpkg.com/monaco-editor/min';\n        // typingsWorkerUrl = 'assets/workers/typings-worker.js';\n        this.typingsWorkerUrl = 'https://unpkg.com/@ngstack/code-editor/workers/typings-worker.js';\n        this.typingsLoaded = new Subject();\n        this.loaded = new Subject();\n        this.loadingTypings = new BehaviorSubject(false);\n        const defaults = {\n            baseUrl: this.baseUrl,\n            typingsWorkerUrl: this.typingsWorkerUrl,\n            ...settings,\n        };\n        this.baseUrl = defaults.baseUrl;\n        this.typingsWorkerUrl = defaults.typingsWorkerUrl;\n    }\n    loadTypingsWorker() {\n        if (!this.typingsWorker && window.Worker) {\n            if (this.typingsWorkerUrl.startsWith('http')) {\n                const proxyScript = `importScripts('${this.typingsWorkerUrl}');`;\n                const proxy = URL.createObjectURL(new Blob([proxyScript], { type: 'text/javascript' }));\n                this.typingsWorker = new Worker(proxy);\n            }\n            else {\n                this.typingsWorker = new Worker(this.typingsWorkerUrl);\n            }\n            this.typingsWorker.addEventListener('message', (e) => {\n                this.loadingTypings.next(false);\n                this.typingsLoaded.next(e.data);\n            });\n        }\n        return this.typingsWorker;\n    }\n    loadTypings(dependencies) {\n        if (dependencies && dependencies.length > 0) {\n            const worker = this.loadTypingsWorker();\n            if (worker) {\n                this.loadingTypings.next(true);\n                worker.postMessage({\n                    dependencies,\n                });\n            }\n        }\n    }\n    loadEditor() {\n        return new Promise((resolve) => {\n            const onGotAmdLoader = () => {\n                window.require.config({\n                    paths: { vs: `${this.baseUrl}/vs` },\n                });\n                if (this.baseUrl.startsWith('http')) {\n                    const proxyScript = `\n            self.MonacoEnvironment = {\n              baseUrl: \"${this.baseUrl}\"\n            };\n            importScripts('${this.baseUrl}/vs/base/worker/workerMain.js');\n          `;\n                    const proxy = URL.createObjectURL(new Blob([proxyScript], { type: 'text/javascript' }));\n                    window['MonacoEnvironment'] = {\n                        getWorkerUrl: function () {\n                            return proxy;\n                        },\n                    };\n                }\n                window.require(['vs/editor/editor.main'], () => {\n                    this.loaded.next({ monaco });\n                    resolve();\n                });\n            };\n            if (!window.require) {\n                const loaderScript = document.createElement('script');\n                loaderScript.type = 'text/javascript';\n                loaderScript.src = `${this.baseUrl}/vs/loader.js`;\n                loaderScript.addEventListener('load', onGotAmdLoader);\n                document.body.appendChild(loaderScript);\n            }\n            else {\n                onGotAmdLoader();\n            }\n        });\n    }\n}\nCodeEditorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorService, deps: [{ token: EDITOR_SETTINGS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nCodeEditorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [EDITOR_SETTINGS]\n                }] }]; } });\n\nclass TypescriptDefaultsService {\n    constructor(codeEditorService) {\n        codeEditorService.loaded.subscribe(event => {\n            this.setup(event.monaco);\n        });\n        codeEditorService.typingsLoaded.subscribe(typings => {\n            this.updateTypings(typings);\n        });\n    }\n    setup(monaco) {\n        if (!monaco) {\n            return;\n        }\n        this.monaco = monaco;\n        const defaults = monaco.languages.typescript.typescriptDefaults;\n        defaults.setCompilerOptions({\n            target: monaco.languages.typescript.ScriptTarget.ES6,\n            module: 'commonjs',\n            noEmit: true,\n            noLib: true,\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n            allowNonTsExtensions: true,\n            declaration: true,\n            lib: ['es2017', 'dom'],\n            baseUrl: '.',\n            paths: {}\n        });\n        defaults.setMaximumWorkerIdleTime(-1);\n        defaults.setEagerModelSync(true);\n        /*\n        defaults.setDiagnosticsOptions({\n          noSemanticValidation: true,\n          noSyntaxValidation: true\n        });\n        */\n    }\n    updateTypings(typings) {\n        if (typings) {\n            this.addExtraLibs(typings.files);\n            this.addLibraryPaths(typings.entryPoints);\n        }\n    }\n    addExtraLibs(libs = []) {\n        if (!this.monaco || !libs || libs.length === 0) {\n            return;\n        }\n        const defaults = this.monaco.languages.typescript.typescriptDefaults;\n        // undocumented API\n        const registeredLibs = defaults.getExtraLibs();\n        libs.forEach(lib => {\n            if (!registeredLibs[lib.path]) {\n                // needs performance improvements, recreates its worker each time\n                // defaults.addExtraLib(lib.content, lib.path);\n                // undocumented API\n                defaults._extraLibs[lib.path] = lib.content;\n            }\n        });\n        // undocumented API\n        defaults._onDidChange.fire(defaults);\n    }\n    addLibraryPaths(paths = {}) {\n        if (!this.monaco) {\n            return;\n        }\n        const defaults = this.monaco.languages.typescript.typescriptDefaults;\n        const compilerOptions = defaults.getCompilerOptions();\n        compilerOptions.paths = compilerOptions.paths || {};\n        Object.keys(paths).forEach(key => {\n            compilerOptions.paths[key] = [paths[key]];\n        });\n    }\n}\nTypescriptDefaultsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: TypescriptDefaultsService, deps: [{ token: CodeEditorService }], target: i0.ɵɵFactoryTarget.Injectable });\nTypescriptDefaultsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: TypescriptDefaultsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: TypescriptDefaultsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: CodeEditorService }]; } });\n\nclass JavascriptDefaultsService {\n    constructor(codeEditorService) {\n        codeEditorService.loaded.subscribe(event => {\n            this.setup(event.monaco);\n        });\n        codeEditorService.typingsLoaded.subscribe(typings => {\n            this.updateTypings(typings);\n        });\n    }\n    setup(monaco) {\n        if (!monaco) {\n            return;\n        }\n        this.monaco = monaco;\n        const defaults = monaco.languages.typescript.javascriptDefaults;\n        defaults.setCompilerOptions({\n            target: monaco.languages.typescript.ScriptTarget.ES6,\n            module: 'commonjs',\n            allowNonTsExtensions: true,\n            baseUrl: '.',\n            paths: {}\n        });\n        defaults.setMaximumWorkerIdleTime(-1);\n        defaults.setEagerModelSync(true);\n        /*\n        defaults.setDiagnosticsOptions({\n          noSemanticValidation: false,\n          noSyntaxValidation: false\n        });\n        */\n    }\n    updateTypings(typings) {\n        if (typings) {\n            this.addExtraLibs(typings.files);\n            this.addLibraryPaths(typings.entryPoints);\n        }\n    }\n    addExtraLibs(libs = []) {\n        if (!this.monaco || !libs || libs.length === 0) {\n            return;\n        }\n        const defaults = this.monaco.languages.typescript.javascriptDefaults;\n        // undocumented API\n        const registeredLibs = defaults.getExtraLibs();\n        libs.forEach(lib => {\n            if (!registeredLibs[lib.path]) {\n                // needs performance improvements, recreates its worker each time\n                // defaults.addExtraLib(lib.content, lib.path);\n                // undocumented API\n                defaults._extraLibs[lib.path] = lib.content;\n            }\n        });\n        // undocumented API\n        defaults._onDidChange.fire(defaults);\n    }\n    addLibraryPaths(paths = {}) {\n        if (!this.monaco) {\n            return;\n        }\n        const defaults = this.monaco.languages.typescript.javascriptDefaults;\n        const compilerOptions = defaults.getCompilerOptions();\n        compilerOptions.paths = compilerOptions.paths || {};\n        Object.keys(paths).forEach(key => {\n            compilerOptions.paths[key] = [paths[key]];\n        });\n    }\n}\nJavascriptDefaultsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: JavascriptDefaultsService, deps: [{ token: CodeEditorService }], target: i0.ɵɵFactoryTarget.Injectable });\nJavascriptDefaultsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: JavascriptDefaultsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: JavascriptDefaultsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: CodeEditorService }]; } });\n\nclass JsonDefaultsService {\n    constructor(codeEditorService) {\n        codeEditorService.loaded.subscribe(event => {\n            this.setup(event.monaco);\n        });\n    }\n    setup(monaco) {\n        if (!monaco) {\n            return;\n        }\n        this.monaco = monaco;\n        const defaults = monaco.languages.json.jsonDefaults;\n        defaults.setDiagnosticsOptions({\n            validate: true,\n            allowComments: true,\n            schemas: [\n                ...defaults._diagnosticsOptions.schemas,\n                {\n                    uri: 'http://myserver/foo-schema.json',\n                    // fileMatch: [id],\n                    // fileMatch: ['*.json'],\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            p1: {\n                                enum: ['v1', 'v2']\n                            },\n                            p2: {\n                                $ref: 'http://myserver/bar-schema.json'\n                            }\n                        }\n                    }\n                },\n                {\n                    uri: 'http://myserver/bar-schema.json',\n                    // fileMatch: [id],\n                    // fileMatch: ['*.json'],\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            q1: {\n                                enum: ['x1', 'x2']\n                            }\n                        }\n                    }\n                }\n            ]\n        });\n    }\n    addSchemas(id, definitions = []) {\n        const defaults = this.monaco.languages.json.jsonDefaults;\n        const options = defaults.diagnosticsOptions;\n        const schemas = {};\n        if (options && options.schemas && options.schemas.length > 0) {\n            options.schemas.forEach(schema => {\n                schemas[schema.uri] = schema;\n            });\n        }\n        for (const { uri, schema } of definitions) {\n            schemas[uri] = {\n                uri,\n                schema,\n                fileMatch: [id || '*.json']\n            };\n        }\n        // console.log(schemas);\n        // console.log(Object.values(schemas));\n        options.schemas = Object.values(schemas);\n        defaults.setDiagnosticsOptions(options);\n    }\n}\nJsonDefaultsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: JsonDefaultsService, deps: [{ token: CodeEditorService }], target: i0.ɵɵFactoryTarget.Injectable });\nJsonDefaultsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: JsonDefaultsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: JsonDefaultsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: CodeEditorService }]; } });\n\nclass CodeEditorComponent {\n    constructor(editorService, typescriptDefaults, javascriptDefaults, jsonDefaults) {\n        this.editorService = editorService;\n        this.typescriptDefaults = typescriptDefaults;\n        this.javascriptDefaults = javascriptDefaults;\n        this.jsonDefaults = jsonDefaults;\n        // private _value = '';\n        this.defaultOptions = {\n            lineNumbers: true,\n            contextmenu: false,\n            minimap: {\n                enabled: false,\n            },\n        };\n        // @Input()\n        // set value(v: string) {\n        //   if (v !== this._value) {\n        //     this._value = v;\n        //     this.setEditorValue(v);\n        //     this.valueChanged.emit(v);\n        //   }\n        // }\n        // get value(): string {\n        //   return this._value;\n        // }\n        /**\n         * Editor theme. Defaults to `vs`.\n         *\n         * Allowed values: `vs`, `vs-dark` or `hc-black`.\n         * @memberof CodeEditorComponent\n         */\n        this.theme = 'vs';\n        /**\n         * Editor options.\n         *\n         * See https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html for more details.\n         *\n         * @memberof CodeEditorComponent\n         */\n        this.options = {};\n        /**\n         * Toggle readonly state of the editor.\n         *\n         * @memberof CodeEditorComponent\n         */\n        this.readOnly = false;\n        this.valueChanged = new EventEmitter();\n        this.loaded = new EventEmitter();\n    }\n    ngOnDestroy() {\n        if (this._editor) {\n            this._editor.dispose();\n            this._editor = null;\n        }\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.codeModel && !changes.codeModel.firstChange) {\n            this.updateModel(changes.codeModel.currentValue);\n        }\n        if (changes.readOnly && !changes.readOnly.firstChange) {\n            if (this._editor) {\n                this._editor.updateOptions({\n                    readOnly: changes.readOnly.currentValue,\n                });\n            }\n        }\n        if (changes.theme && !changes.theme.firstChange) {\n            monaco.editor.setTheme(changes.theme.currentValue);\n        }\n    }\n    onResize() {\n        if (this._editor) {\n            this._editor.layout();\n        }\n    }\n    async ngAfterViewInit() {\n        this.setupEditor();\n        this.loaded.emit();\n    }\n    setupEditor() {\n        const domElement = this.editorContent.nativeElement;\n        const settings = {\n            value: '',\n            language: 'text',\n            uri: `code-${Date.now()}`,\n            ...this.codeModel,\n        };\n        this._model = monaco.editor.createModel(settings.value, settings.language, monaco.Uri.file(settings.uri));\n        const options = Object.assign({}, this.defaultOptions, this.options, {\n            readOnly: this.readOnly,\n            theme: this.theme,\n            model: this._model,\n        });\n        this._editor = monaco.editor.create(domElement, options);\n        this._model.onDidChangeContent(( /*e*/) => {\n            const newValue = this._model.getValue();\n            if (this.codeModel) {\n                this.codeModel.value = newValue;\n            }\n            this.valueChanged.emit(newValue);\n        });\n        this.setupDependencies(this.codeModel);\n    }\n    setupDependencies(model) {\n        if (!model) {\n            return;\n        }\n        const { language } = model;\n        if (language) {\n            const lang = language.toLowerCase();\n            switch (lang) {\n                case 'typescript':\n                    if (model.dependencies) {\n                        this.editorService.loadTypings(model.dependencies);\n                    }\n                    break;\n                case 'javascript':\n                    if (model.dependencies) {\n                        this.editorService.loadTypings(model.dependencies);\n                    }\n                    break;\n                case 'json':\n                    if (model.schemas) {\n                        this.jsonDefaults.addSchemas(model.uri, model.schemas);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    setEditorValue(value) {\n        // Fix for value change while dispose in process.\n        setTimeout(() => {\n            if (this._model) {\n                this._model.setValue(value);\n            }\n        });\n    }\n    updateModel(model) {\n        if (model) {\n            this.setEditorValue(model.value);\n            if (this._model && typeof monaco !== undefined) {\n                monaco.editor.setModelLanguage(this._model, model.language);\n            }\n            this.setupDependencies(model);\n        }\n    }\n}\nCodeEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorComponent, deps: [{ token: CodeEditorService }, { token: TypescriptDefaultsService }, { token: JavascriptDefaultsService }, { token: JsonDefaultsService }], target: i0.ɵɵFactoryTarget.Component });\nCodeEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.1\", type: CodeEditorComponent, selector: \"ngs-code-editor\", inputs: { codeModel: \"codeModel\", theme: \"theme\", options: \"options\", readOnly: \"readOnly\" }, outputs: { valueChanged: \"valueChanged\", loaded: \"loaded\" }, host: { listeners: { \"window:resize\": \"onResize()\" }, classAttribute: \"ngs-code-editor\" }, viewQueries: [{ propertyName: \"editorContent\", first: true, predicate: [\"editor\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div id=\\\"editor\\\" #editor class=\\\"monaco-editor editor\\\"></div>\\n\", styles: [\".editor{width:100%;height:inherit;min-height:200px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngs-code-editor', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { class: 'ngs-code-editor' }, template: \"<div id=\\\"editor\\\" #editor class=\\\"monaco-editor editor\\\"></div>\\n\", styles: [\".editor{width:100%;height:inherit;min-height:200px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: CodeEditorService }, { type: TypescriptDefaultsService }, { type: JavascriptDefaultsService }, { type: JsonDefaultsService }]; }, propDecorators: { editorContent: [{\n                type: ViewChild,\n                args: ['editor', { static: true }]\n            }], codeModel: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], valueChanged: [{\n                type: Output\n            }], loaded: [{\n                type: Output\n            }], onResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nfunction setupEditorService(service) {\n    const result = () => service.loadEditor();\n    return result;\n}\nclass CodeEditorModule {\n    static forRoot(settings) {\n        return {\n            ngModule: CodeEditorModule,\n            providers: [\n                { provide: EDITOR_SETTINGS, useValue: settings },\n                CodeEditorService,\n                TypescriptDefaultsService,\n                JavascriptDefaultsService,\n                JsonDefaultsService,\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: setupEditorService,\n                    deps: [CodeEditorService],\n                    multi: true,\n                },\n            ],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: CodeEditorModule,\n        };\n    }\n}\nCodeEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCodeEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorModule, declarations: [CodeEditorComponent], imports: [CommonModule], exports: [CodeEditorComponent] });\nCodeEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.1\", ngImport: i0, type: CodeEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [CodeEditorComponent],\n                    exports: [CodeEditorComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of code-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CodeEditorComponent, CodeEditorModule, CodeEditorService, EDITOR_SETTINGS, JavascriptDefaultsService, TypescriptDefaultsService, setupEditorService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}